{
  "name": "TrueBlue Chat Management Integration",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook-chat",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "chat-management-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.event_type }}",
              "operation": "equal",
              "value2": "new_message"
            }
          ]
        }
      },
      "id": "filter-messages",
      "name": "Filter New Messages",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "={{ $env.SUPABASE_URL }}/rest/v1/tb_messages",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "httpHeaderAuth": "={{ $env.SUPABASE_ANON_KEY }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=minimal"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "conversation_id",
              "value": "={{ $json.conversation_id }}"
            },
            {
              "name": "content",
              "value": "={{ $json.content }}"
            },
            {
              "name": "sender_role",
              "value": "={{ $json.sender_role }}"
            },
            {
              "name": "agent_email",
              "value": "={{ $json.agent_email || null }}"
            },
            {
              "name": "agent_name",
              "value": "={{ $json.agent_name || null }}"
            }
          ]
        },
        "options": {}
      },
      "id": "save-message",
      "name": "Save Message to Supabase",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 200]
    },
    {
      "parameters": {
        "url": "={{ $env.SUPABASE_URL }}/rest/v1/tb_conversations",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "httpHeaderAuth": "={{ $env.SUPABASE_ANON_KEY }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "={{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Authorization",
              "value": "Bearer {{ $env.SUPABASE_ANON_KEY }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Prefer",
              "value": "return=minimal"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "status",
              "value": "active_human"
            }
          ]
        },
        "options": {
          "qs": {
            "id": "eq.{{ $json.conversation_id }}"
          }
        }
      },
      "id": "update-conversation",
      "name": "Update Conversation Status",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 400]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.sender_role }}",
              "operation": "equal",
              "value2": "user"
            }
          ]
        }
      },
      "id": "check-user-message",
      "name": "Check if User Message",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [900, 200]
    },
    {
      "parameters": {
        "url": "={{ $env.N8N_WEBHOOK_URL }}/notify-agents",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "conversation_id",
              "value": "={{ $json.conversation_id }}"
            },
            {
              "name": "user_message",
              "value": "={{ $json.content }}"
            },
            {
              "name": "timestamp",
              "value": "={{ $now }}"
            }
          ]
        },
        "options": {}
      },
      "id": "notify-agents",
      "name": "Notify Available Agents",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [1120, 100]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"message\": \"Message processed successfully\", \"timestamp\": $now } }}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": false, \"error\": \"Invalid event type\", \"timestamp\": $now } }}"
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [680, 500]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Filter New Messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter New Messages": {
      "main": [
        [
          {
            "node": "Save Message to Supabase",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update Conversation Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Message to Supabase": {
      "main": [
        [
          {
            "node": "Check if User Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Conversation Status": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if User Message": {
      "main": [
        [
          {
            "node": "Notify Available Agents",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Notify Available Agents": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-01T00:00:00.000Z",
      "updatedAt": "2024-01-01T00:00:00.000Z",
      "id": "chat-management",
      "name": "Chat Management"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-01-01T00:00:00.000Z",
  "versionId": "1"
}
